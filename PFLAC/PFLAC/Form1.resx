<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sgraAAAAAElFTkSuQmCC
</value>
  </data>
</root>